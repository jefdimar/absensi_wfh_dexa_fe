{
  "info": {
    "name": "Absensi WFH Dexa - Microservices API",
    "description": "Complete API collection for Work From Home Attendance System with microservices architecture",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{jwt_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost",
      "type": "string"
    },
    {
      "key": "auth_service_url",
      "value": "http://localhost:3001",
      "type": "string"
    },
    {
      "key": "profile_log_service_url",
      "value": "http://localhost:3002",
      "type": "string"
    },
    {
      "key": "attendance_service_url",
      "value": "http://localhost:3003",
      "type": "string"
    },
    {
      "key": "notification_service_url",
      "value": "http://localhost:3004",
      "type": "string"
    },
    {
      "key": "jwt_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "employee_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üè• Health Checks",
      "item": [
        {
          "name": "API Gateway Health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            }
          },
          "response": []
        },
        {
          "name": "Profile Change Log Service Health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{profile_log_service_url}}/health",
              "host": ["{{profile_log_service_url}}"],
              "path": ["health"]
            }
          },
          "response": []
        },
        {
          "name": "Attendance Service Health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{attendance_service_url}}/health",
              "host": ["{{attendance_service_url}}"],
              "path": ["health"]
            }
          },
          "response": []
        },
        {
          "name": "Auth Service Health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{auth_service_url}}/health",
              "host": ["{{auth_service_url}}"],
              "path": ["health"]
            }
          },
          "response": []
        },
        {
          "name": "Notification Service Health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{notification_service_url}}/health",
              "host": ["{{notification_service_url}}"],
              "path": ["health"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üîê Authentication Service",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201 || pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.id) {",
                  "        pm.collectionVariables.set('employee_id', response.id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePassword123!\",\n  \"position\": \"Software Engineer\",\n  \"phoneNumber\": \"1234567890\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            }
          },
          "response": []
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.accessToken) {",
                  "        pm.collectionVariables.set('jwt_token', response.accessToken);",
                  "    }",
                  "    if (response.employee && response.employee.id) {",
                  "        pm.collectionVariables.set('employee_id', response.employee.id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePassword123!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          },
          "response": []
        },
        {
          "name": "Get Profile",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{jwt_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/auth/profile",
              "host": ["{{base_url}}"],
              "path": ["auth", "profile"]
            }
          },
          "response": []
        },
        {
          "name": "Update Profile",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{jwt_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Doe Updated\",\n  \"position\": \"Senior Software Engineer\",\n  \"phoneNumber\": \"9876543210\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/profile",
              "host": ["{{base_url}}"],
              "path": ["auth", "profile"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üìä Profile Change Log Service",
      "item": [
        {
          "name": "Get All Profile Change Logs",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{jwt_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/profile-change-logs",
              "host": ["{{base_url}}"],
              "path": ["profile-change-logs"]
            }
          },
          "response": []
        },
        {
          "name": "Get Profile Change Logs by Employee ID",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{jwt_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/profile-change-logs/employee/{{employee_id}}",
              "host": ["{{base_url}}"],
              "path": ["profile-change-logs", "employee", "{{employee_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Create Profile Change Log (Manual)",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{jwt_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"employeeId\": \"{{employee_id}}\",\n  \"changedField\": \"position\",\n  \"oldValue\": \"Software Engineer\",\n  \"newValue\": \"Senior Software Engineer\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/profile-change-logs",
              "host": ["{{base_url}}"],
              "path": ["profile-change-logs"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üì¢ Notification Service",
      "item": [
        {
          "name": "Get All Notifications",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/notifications",
              "host": ["{{base_url}}"],
              "path": ["api", "notifications"]
            }
          },
          "response": []
        },
        {
          "name": "Get Unread Notifications",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/notifications/unread",
              "host": ["{{base_url}}"],
              "path": ["api", "notifications", "unread"]
            }
          },
          "response": []
        },
        {
          "name": "Mark Notification as Read",
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/notifications/{{notification_id}}/read",
              "host": ["{{base_url}}"],
              "path": ["api", "notifications", "{{notification_id}}", "read"]
            }
          },
          "response": []
        },
        {
          "name": "Create Manual Notification",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"employeeId\": \"{{employee_id}}\",\n  \"message\": \"Manual test notification for employee profile update\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/notifications/create",
              "host": ["{{base_url}}"],
              "path": ["api", "notifications", "create"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "‚è∞ Attendance Service",
      "item": [
        {
          "name": "Attendance Service Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/attendance",
              "host": ["{{base_url}}"],
              "path": ["attendance"]
            }
          },
          "response": []
        },
        {
          "name": "Check In",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{jwt_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/attendance/check-in",
              "host": ["{{base_url}}"],
              "path": ["attendance", "check-in"]
            }
          },
          "response": []
        },
        {
          "name": "Check Out",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{jwt_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/attendance/check-out",
              "host": ["{{base_url}}"],
              "path": ["attendance", "check-out"]
            }
          },
          "response": []
        },
        {
          "name": "Create Custom Attendance",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{jwt_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"employeeId\": \"{{employee_id}}\",\n  \"status\": \"check-in\",\n  \"location\": \"Home Office\",\n  \"notes\": \"Working from home today\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/attendance",
              "host": ["{{base_url}}"],
              "path": ["attendance"]
            }
          },
          "response": []
        },
        {
          "name": "Get My Attendance Records",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{jwt_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/attendance/my-records?startDate=2025-06-01&endDate=2025-06-30",
              "host": ["{{base_url}}"],
              "path": ["attendance", "my-records"],
              "query": [
                {
                  "key": "startDate",
                  "value": "2025-06-01"
                },
                {
                  "key": "endDate",
                  "value": "2025-06-30"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Employee Attendance Records",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{jwt_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/attendance/employee/{{employee_id}}?startDate=2025-06-01&endDate=2025-06-30",
              "host": ["{{base_url}}"],
              "path": ["attendance", "employee", "{{employee_id}}"],
              "query": [
                {
                  "key": "startDate",
                  "value": "2025-06-01"
                },
                {
                  "key": "endDate",
                  "value": "2025-06-30"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get My Daily Summary",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{jwt_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/attendance/summary/daily?date=2025-06-20",
              "host": ["{{base_url}}"],
              "path": ["attendance", "summary", "daily"],
              "query": [
                {
                  "key": "date",
                  "value": "2025-06-20"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Employee Daily Summary",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                                    "key": "token",
                  "value": "{{jwt_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/attendance/summary/daily/{{employee_id}}?date=2025-06-20",
              "host": ["{{base_url}}"],
              "path": ["attendance", "summary", "daily", "{{employee_id}}"],
              "query": [
                {
                  "key": "date",
                  "value": "2025-06-20"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get My Monthly Stats",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{jwt_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/attendance/stats/monthly?year=2025&month=6",
              "host": ["{{base_url}}"],
              "path": ["attendance", "stats", "monthly"],
              "query": [
                {
                  "key": "year",
                  "value": "2025"
                },
                {
                  "key": "month",
                  "value": "6"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Employee Monthly Stats",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{jwt_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/attendance/stats/monthly/{{employee_id}}?year=2025&month=6",
              "host": ["{{base_url}}"],
              "path": ["attendance", "stats", "monthly", "{{employee_id}}"],
              "query": [
                {
                  "key": "year",
                  "value": "2025"
                },
                {
                  "key": "month",
                  "value": "6"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üîß Direct Service Access (Bypass Gateway)",
      "item": [
        {
          "name": "Auth Service - Direct Register",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Direct Test User\",\n  \"email\": \"direct.test@example.com\",\n  \"password\": \"DirectPassword123!\",\n  \"position\": \"QA Engineer\",\n  \"phoneNumber\": \"5555551234\"\n}"
            },
            "url": {
              "raw": "{{auth_service_url}}/auth/register",
              "host": ["{{auth_service_url}}"],
              "path": ["auth", "register"]
            }
          },
          "response": []
        },
        {
          "name": "Auth Service - Direct Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"direct.test@example.com\",\n  \"password\": \"DirectPassword123!\"\n}"
            },
            "url": {
              "raw": "{{auth_service_url}}/auth/login",
              "host": ["{{auth_service_url}}"],
              "path": ["auth", "login"]
            }
          },
          "response": []
        },
        {
          "name": "Profile Service - Direct Get All Logs",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{jwt_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{profile_log_service_url}}/profile-change-logs",
              "host": ["{{profile_log_service_url}}"],
              "path": ["profile-change-logs"]
            }
          },
          "response": []
        },
        {
          "name": "Attendance Service - Direct Check-in",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{jwt_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{attendance_service_url}}/attendance/check-in",
              "host": ["{{attendance_service_url}}"],
              "path": ["attendance", "check-in"]
            }
          },
          "response": []
        },
        {
          "name": "Notification Service - Direct Get All",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{notification_service_url}}/notifications",
              "host": ["{{notification_service_url}}"],
              "path": ["notifications"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üß™ Testing Scenarios",
      "item": [
        {
          "name": "Complete User Journey",
          "item": [
            {
              "name": "1. Register New User",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Registration successful', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('User ID is returned', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.id).to.be.a('string');",
                      "    pm.collectionVariables.set('test_employee_id', response.id);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Test Journey User\",\n  \"email\": \"journey.test@example.com\",\n  \"password\": \"JourneyTest123!\",\n  \"position\": \"Test Engineer\",\n  \"phoneNumber\": \"1111111111\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/auth/register",
                  "host": ["{{base_url}}"],
                  "path": ["auth", "register"]
                }
              },
              "response": []
            },
            {
              "name": "2. Login User",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Login successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('JWT token is returned', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.accessToken).to.be.a('string');",
                      "    pm.collectionVariables.set('test_jwt_token', response.accessToken);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"journey.test@example.com\",\n  \"password\": \"JourneyTest123!\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/auth/login",
                  "host": ["{{base_url}}"],
                  "path": ["auth", "login"]
                }
              },
              "response": []
            },
            {
              "name": "3. Check-in to Work",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Check-in successful', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Attendance record created', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.status).to.eql('check-in');",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{test_jwt_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/attendance/check-in",
                  "host": ["{{base_url}}"],
                  "path": ["attendance", "check-in"]
                }
              },
              "response": []
            },
            {
              "name": "4. Update Profile (Triggers Audit Log)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Profile update successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Profile data updated', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.position).to.eql('Senior Test Engineer');",
                      "});",
                      "",
                      "// Wait a moment for notification to be created",
                      "setTimeout(() => {}, 1000);"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{test_jwt_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"position\": \"Senior Test Engineer\",\n  \"phoneNumber\": \"2222222222\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/auth/profile",
                  "host": ["{{base_url}}"],
                  "path": ["auth", "profile"]
                }
              },
              "response": []
            },
            {
              "name": "5. Verify Audit Logs Created",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Audit logs retrieved', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Profile changes logged', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response).to.be.an('array');",
                      "    pm.expect(response.length).to.be.greaterThan(0);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{test_jwt_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/profile-change-logs/employee/{{test_employee_id}}",
                  "host": ["{{base_url}}"],
                  "path": ["profile-change-logs", "employee", "{{test_employee_id}}"]
                }
              },
              "response": []
            },
            {
              "name": "5.1. Verify Notification Created",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Notifications retrieved', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Notification created for profile change', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response).to.be.an('array');",
                      "    const employeeNotifications = response.filter(n => n.employeeId === pm.collectionVariables.get('test_employee_id'));",
                      "    pm.expect(employeeNotifications.length).to.be.greaterThan(0);",
                      "    if (employeeNotifications.length > 0) {",
                      "        pm.collectionVariables.set('test_notification_id', employeeNotifications[0].id);",
                      "    }",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/notifications",
                  "host": ["{{base_url}}"],
                  "path": ["api", "notifications"]
                }
              },
              "response": []
            },
            {
              "name": "6. Check-out from Work",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Check-out successful', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Check-out record created', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.status).to.eql('check-out');",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{test_jwt_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/attendance/check-out",
                  "host": ["{{base_url}}"],
                  "path": ["attendance", "check-out"]
                }
              },
              "response": []
            },
            {
              "name": "7. Get Daily Summary",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Daily summary retrieved', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Summary contains work hours', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response).to.have.property('totalHours');",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{test_jwt_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/attendance/summary/daily?date={{$isoTimestamp}}",
                  "host": ["{{base_url}}"],
                  "path": ["attendance", "summary", "daily"],
                                    "query": [
                    {
                      "key": "date",
                      "value": "{{$isoTimestamp}}",
                      "description": "Current date"
                    }
                  ]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "Error Handling Tests",
          "item": [
            {
              "name": "Invalid Login Credentials",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Invalid credentials rejected', function () {",
                      "    pm.response.to.have.status(401);",
                      "});",
                      "",
                      "pm.test('Error message returned', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.message).to.include('Invalid credentials');",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"nonexistent@example.com\",\n  \"password\": \"WrongPassword123!\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/auth/login",
                  "host": ["{{base_url}}"],
                  "path": ["auth", "login"]
                }
              },
              "response": []
            },
            {
              "name": "Unauthorized Access to Protected Route",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Unauthorized access blocked', function () {",
                      "    pm.response.to.have.status(401);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/auth/profile",
                  "host": ["{{base_url}}"],
                  "path": ["auth", "profile"]
                }
              },
              "response": []
            },
            {
              "name": "Duplicate Email Registration",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Duplicate email rejected', function () {",
                      "    pm.response.to.have.status(409);",
                      "});",
                      "",
                      "pm.test('Conflict message returned', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.message).to.include('Email already exists');",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Duplicate User\",\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"Password123!\",\n  \"position\": \"Developer\",\n  \"phoneNumber\": \"1234567890\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/auth/register",
                  "host": ["{{base_url}}"],
                  "path": ["auth", "register"]
                }
              },
              "response": []
            },
            {
              "name": "Invalid UUID in URL",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Invalid UUID rejected', function () {",
                      "    pm.response.to.have.status(400);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{jwt_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/profile-change-logs/employee/invalid-uuid",
                  "host": ["{{base_url}}"],
                  "path": ["profile-change-logs", "employee", "invalid-uuid"]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "Notification Tests",
          "item": [
            {
              "name": "Get Unread Notifications",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Unread notifications retrieved', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is array', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response).to.be.an('array');",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/notifications/unread",
                  "host": ["{{base_url}}"],
                  "path": ["api", "notifications", "unread"]
                }
              },
              "response": []
            },
            {
              "name": "Mark Notification as Read",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Notification marked as read', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Notification read status updated', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.read).to.be.true;",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "PATCH",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/notifications/{{test_notification_id}}/read",
                  "host": ["{{base_url}}"],
                  "path": ["api", "notifications", "{{test_notification_id}}", "read"]
                }
              },
              "response": []
            }
          ]
        }
      ]
    },
    {
      "name": "üìä Performance & Load Testing",
      "item": [
        {
          "name": "Bulk Profile Updates",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{jwt_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Load Test User {{$randomInt}}\",\n  \"position\": \"Position {{$randomInt}}\",\n  \"phoneNumber\": \"{{$randomPhoneNumber}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/profile",
              "host": ["{{base_url}}"],
              "path": ["auth", "profile"]
            }
          },
          "response": []
        },
        {
          "name": "Multiple Check-ins (Should Fail)",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{jwt_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/attendance/check-in",
              "host": ["{{base_url}}"],
              "path": ["attendance", "check-in"]
            }
          },
          "response": []
        },
        {
          "name": "Concurrent Attendance Records Query",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{jwt_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/attendance/my-records",
              "host": ["{{base_url}}"],
              "path": ["attendance", "my-records"]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-set current date for date parameters",
          "const today = new Date().toISOString().split('T')[0];",
          "pm.collectionVariables.set('current_date', today);",
          "",
          "// Auto-set current year and month",
          "const now = new Date();",
          "pm.collectionVariables.set('current_year', now.getFullYear());",
          "pm.collectionVariables.set('current_month', now.getMonth() + 1);"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test for response time",
          "pm.test('Response time is acceptable', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "// Global test for valid JSON response (when applicable)",
          "if (pm.response.headers.get('Content-Type') && pm.response.headers.get('Content-Type').includes('application/json')) {",
          "    pm.test('Response is valid JSON', function () {",
          "        pm.response.to.be.json;",
          "    });",
          "}"
        ]
      }
    }
  ]
}


